---
import AuthLayout from "../layouts/AuthLayout.astro";
import Button from "../components/button/Button.astro";
import Input from "../components/input/Input.astro";
import Label from "../components/label/Label.astro";
import { getSupabaseTokens } from "../utils/ssrAuthUtils";

const { cookies, redirect } = Astro;

// Verificar si ya est√° autenticado
const { accessToken, refreshToken } = getSupabaseTokens(cookies);

if (accessToken && refreshToken) {
  return redirect("/onboarding/level");
}

// Manejo de errores desde la URL
const error = Astro.url.searchParams.get("error");
const message = Astro.url.searchParams.get("message");
---

<AuthLayout>
  <div class="w-full max-w-md mx-auto">
    <!-- Header -->
    <div class="text-center mb-8">
      <div class="text-4xl mb-4">üéì</div>
      <h1 class="text-3xl font-bold text-gray-900 mb-2">Crea tu cuenta</h1>
      <p class="text-gray-600">
        √önete a nuestra plataforma de aprendizaje y comienza tu viaje
      </p>
    </div>

    <!-- Mensajes de error/√©xito -->
    {
      error && (
        <div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg">
          <div class="flex items-center">
            <div class="text-red-600 mr-2">‚ö†Ô∏è</div>
            <p class="text-red-800">{error}</p>
          </div>
        </div>
      )
    }

    {
      message && (
        <div class="mb-6 p-4 bg-green-50 border border-green-200 rounded-lg">
          <div class="flex items-center">
            <div class="text-green-600 mr-2">‚úÖ</div>
            <p class="text-green-800">{message}</p>
          </div>
        </div>
      )
    }

    <!-- Formulario de registro -->
    <form
      action="/auth/register"
      method="post"
      class="space-y-6"
      id="registerForm"
    >
      <div>
        <Label for="name">Nombre completo</Label>
        <Input
          type="text"
          name="name"
          id="name"
          required
          placeholder="Tu nombre completo"
          autocomplete="name"
        />
      </div>

      <div>
        <Label for="email">Correo electr√≥nico</Label>
        <Input
          type="email"
          name="email"
          id="email"
          required
          placeholder="tu@email.com"
          autocomplete="email"
        />
      </div>

      <div>
        <Label for="password">Contrase√±a</Label>
        <Input
          type="password"
          name="password"
          id="password"
          required
          placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
          autocomplete="new-password"
        />
        <p class="text-sm text-gray-500 mt-1">
          Debe tener al menos 8 caracteres
        </p>
      </div>

      <div>
        <Label for="confirmPassword">Confirmar contrase√±a</Label>
        <Input
          type="password"
          name="confirmPassword"
          id="confirmPassword"
          required
          placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
          autocomplete="new-password"
        />
      </div>

      <!-- T√©rminos y condiciones -->
      <div class="flex items-start">
        <div class="flex items-center h-5">
          <input
            id="terms"
            name="terms"
            type="checkbox"
            required
            class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
          />
        </div>
        <div class="ml-3 text-sm">
          <label for="terms" class="text-gray-600">
            Acepto los
            <a
              href="/terms"
              class="text-blue-600 hover:text-blue-700 underline"
            >
              t√©rminos y condiciones
            </a>
            y la
            <a
              href="/privacy"
              class="text-blue-600 hover:text-blue-700 underline"
            >
              pol√≠tica de privacidad
            </a>
          </label>
        </div>
      </div>

      <!-- Bot√≥n de env√≠o -->
      <Button
        type="submit"
        class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-4 rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
      >
        Crear cuenta
      </Button>
    </form>

    <!-- Enlaces adicionales -->
    <div class="mt-6 text-center">
      <p class="text-gray-600">
        ¬øYa tienes una cuenta?
        <a
          href="/signin"
          class="text-blue-600 hover:text-blue-700 font-semibold transition-colors"
        >
          Inicia sesi√≥n aqu√≠
        </a>
      </p>
    </div>

    <!-- Informaci√≥n adicional -->
    <div class="mt-8 p-4 bg-blue-50 rounded-lg border border-blue-200">
      <h3 class="font-semibold text-blue-900 mb-2">üåü ¬øPor qu√© registrarte?</h3>
      <ul class="text-sm text-blue-800 space-y-1">
        <li>‚Ä¢ Acceso a contenido personalizado</li>
        <li>‚Ä¢ Seguimiento de tu progreso</li>
        <li>‚Ä¢ Certificados de completion</li>
        <li>‚Ä¢ Comunidad de aprendizaje</li>
      </ul>
    </div>
  </div>

  <!-- Scripts para validaci√≥n y UX -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const form = document.getElementById("registerForm");
      const submitButton = form?.querySelector(
        'button[type="submit"]'
      ) as HTMLButtonElement;

      if (form && submitButton) {
        form.addEventListener("submit", (e) => {
          // Mostrar estado de carga
          submitButton.disabled = true;
          submitButton.textContent = "Creando cuenta...";

          // Validaci√≥n b√°sica
          const name = form.querySelector(
            'input[name="name"]'
          ) as HTMLInputElement;
          const email = form.querySelector(
            'input[name="email"]'
          ) as HTMLInputElement;
          const password = form.querySelector(
            'input[name="password"]'
          ) as HTMLInputElement;
          const confirmPassword = form.querySelector(
            'input[name="confirmPassword"]'
          ) as HTMLInputElement;
          const terms = form.querySelector(
            'input[name="terms"]'
          ) as HTMLInputElement;

          // Validar campos requeridos
          if (
            !name.value ||
            !email.value ||
            !password.value ||
            !confirmPassword.value
          ) {
            e.preventDefault();
            alert("Por favor, completa todos los campos");
            resetButton();
            return;
          }

          // Validar nombre
          if (name.value.length < 2) {
            e.preventDefault();
            alert("El nombre debe tener al menos 2 caracteres");
            resetButton();
            return;
          }

          // Validar email
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailRegex.test(email.value)) {
            e.preventDefault();
            alert("Por favor, ingresa un email v√°lido");
            resetButton();
            return;
          }

          // Validar contrase√±a
          if (password.value.length < 8) {
            e.preventDefault();
            alert("La contrase√±a debe tener al menos 8 caracteres");
            resetButton();
            return;
          }

          // Validar confirmaci√≥n de contrase√±a
          if (password.value !== confirmPassword.value) {
            e.preventDefault();
            alert("Las contrase√±as no coinciden");
            resetButton();
            return;
          }

          // Validar t√©rminos
          if (!terms.checked) {
            e.preventDefault();
            alert("Debes aceptar los t√©rminos y condiciones");
            resetButton();
            return;
          }

          function resetButton() {
            submitButton.disabled = false;
            submitButton.textContent = "Crear cuenta";
          }
        });

        // Validaci√≥n en tiempo real de confirmaci√≥n de contrase√±a
        const password = form.querySelector(
          'input[name="password"]'
        ) as HTMLInputElement;
        const confirmPassword = form.querySelector(
          'input[name="confirmPassword"]'
        ) as HTMLInputElement;

        function validatePasswordMatch() {
          if (
            confirmPassword.value &&
            password.value !== confirmPassword.value
          ) {
            confirmPassword.setCustomValidity("Las contrase√±as no coinciden");
          } else {
            confirmPassword.setCustomValidity("");
          }
        }

        password.addEventListener("input", validatePasswordMatch);
        confirmPassword.addEventListener("input", validatePasswordMatch);
      }
    });
  </script>
</AuthLayout>
