---
import Button from "../../components/button/Button.astro";
import Input from "../../components/input/Input.astro";
import Label from "../../components/label/Label.astro";
import AuthLayout from "../../layouts/AuthLayout.astro";
---

<AuthLayout>
  <div class="w-full max-w-md">
    <!-- Logo/Título -->
    <div class="text-center mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">Iniciar Sesión</h1>
      <p class="text-gray-600">Ingresa a tu cuenta</p>
    </div>

    <!-- Formulario -->
    <div class="bg-white rounded-2xl shadow-xl p-8">
      <form id="loginForm" class="space-y-6">
        <!-- Mensaje de error -->
        <div
          id="errorMessage"
          class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg"
        >
          <p id="errorText"></p>
        </div>

        <!-- Campo Email -->
        <div class="space-y-2">
          <Label for="email" class="text-gray-700 font-medium">Email</Label>
          <Input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-gray-400"
            placeholder="Ingresa tu email"
          />
        </div>

        <!-- Campo Contraseña -->
        <div class="space-y-2">
          <Label for="password" class="text-gray-700 font-medium"
            >Contraseña</Label
          >
          <Input
            type="password"
            id="password"
            name="password"
            required
            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-gray-400"
            placeholder="Ingresa tu contraseña"
          />
        </div>

        <!-- Opciones adicionales -->
        <div class="flex items-center justify-between text-sm">
          <label class="flex items-center space-x-2 text-gray-600">
            <input
              type="checkbox"
              class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
            />
            <span>Recordarme</span>
          </label>
          <a
            href="#"
            class="text-blue-600 hover:text-blue-800 transition-colors"
          >
            ¿Olvidaste tu contraseña?
          </a>
        </div>

        <!-- Botón de Login -->
        <Button
          type="submit"
          id="loginButton"
          class="w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-3 px-6 rounded-lg shadow-md hover:shadow-lg transform hover:scale-[1.02] transition-all duration-200"
        >
          <span id="loginButtonText">Iniciar Sesión</span>
          <span id="loginButtonSpinner" class="hidden">
            <svg
              class="animate-spin -ml-1 mr-3 h-5 w-5 text-white"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
            Iniciando sesión...
          </span>
        </Button>
      </form>

      <!-- Divider -->
      <div class="my-6 flex items-center">
        <div class="flex-1 border-t border-gray-200"></div>
        <span class="px-4 text-gray-500 text-sm">o</span>
        <div class="flex-1 border-t border-gray-200"></div>
      </div>

      <!-- Registro -->
      <div class="text-center">
        <p class="text-gray-600">
          ¿No tienes cuenta?
          <a
            href="/auth/register"
            class="text-blue-600 hover:text-blue-800 font-medium transition-colors"
          >
            Regístrate aquí
          </a>
        </p>
      </div>
    </div>
  </div>
</AuthLayout>

<script>
  import { initAuth, isLoggedIn, signIn } from "../../utils/authUtils";

  // Obtener referencias a los elementos del DOM
  const loginForm = document.getElementById("loginForm") as HTMLFormElement;
  const emailInput = document.getElementById("email") as HTMLInputElement;
  const passwordInput = document.getElementById("password") as HTMLInputElement;
  const errorMessage = document.getElementById(
    "errorMessage"
  ) as HTMLDivElement;
  const errorText = document.getElementById(
    "errorText"
  ) as HTMLParagraphElement;
  const loginButton = document.getElementById(
    "loginButton"
  ) as HTMLButtonElement;
  const loginButtonText = document.getElementById(
    "loginButtonText"
  ) as HTMLSpanElement;
  const loginButtonSpinner = document.getElementById(
    "loginButtonSpinner"
  ) as HTMLSpanElement;

  // Inicializar el estado de autenticación
  initAuth();

  // Verificar si ya está autenticado y redirigir
  if (isLoggedIn()) {
    Astro.redirect("/onboarding/level");
  }

  // Función para mostrar errores
  function showError(message: string) {
    errorText.textContent = message;
    errorMessage.classList.remove("hidden");
  }

  // Función para ocultar errores
  function hideError() {
    errorMessage.classList.add("hidden");
  }

  // Función para mostrar/ocultar spinner
  function setLoading(loading: boolean) {
    if (loading) {
      loginButtonText.classList.add("hidden");
      loginButtonSpinner.classList.remove("hidden");
      loginButton.disabled = true;
    } else {
      loginButtonText.classList.remove("hidden");
      loginButtonSpinner.classList.add("hidden");
      loginButton.disabled = false;
    }
  }

  // Manejar el submit del formulario
  loginForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    hideError();
    setLoading(true);

    const formData = new FormData(loginForm);
    const credentials = {
      email: formData.get("email") as string,
      password: formData.get("password") as string,
    };

    try {
      await signIn(credentials);

      // Mostrar mensaje de éxito
      console.log("Login exitoso!");

      // Redirigir después del login exitoso
      Astro.redirect("/onboarding/level");
    } catch (error) {
      setLoading(false);
      const errorMessage =
        error instanceof Error ? error.message : "Error al iniciar sesión";
      showError(errorMessage);
    }
  });

  // Limpiar errores cuando el usuario empiece a escribir
  emailInput.addEventListener("input", hideError);
  passwordInput.addEventListener("input", hideError);
</script>
