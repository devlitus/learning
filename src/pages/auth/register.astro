---
import Button from "../../components/button/Button.astro";
import Input from "../../components/input/Input.astro";
import Label from "../../components/label/Label.astro";
import AuthLayout from "../../layouts/AuthLayout.astro";
import { registerUser, isAuthenticated } from "../../utils/ssrAuthUtils";
import { registerSchema } from "../../schema/register.schema";

// Variables para manejar el estado de la p√°gina
let errorMessage = '';
let successMessage = '';
let formData: { name: string; email: string; password: string; confirmPassword: string; terms: boolean } = {
  name: '',
  email: '',
  password: '',
  confirmPassword: '',
  terms: false
};

// Verificar si ya est√° autenticado y redirigir
if (isAuthenticated(Astro.cookies)) {
  return Astro.redirect('/onboarding/level');
}

// Manejar env√≠o del formulario (SSR)
if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();
    const name = data.get('name') as string;
    const email = data.get('email') as string;
    const password = data.get('password') as string;
    const confirmPassword = data.get('confirm-password') as string;
    const terms = data.get('terms') === 'on';
    
    // Guardar datos del formulario para mantener el estado en caso de error
    formData = { name, email, password, confirmPassword, terms };
    
    // Validar t√©rminos y condiciones
    if (!terms) {
      errorMessage = 'Debes aceptar los t√©rminos y condiciones';
    } else {
      // Validar datos con el schema
      const validationResult = registerSchema.safeParse({
        name,
        email,
        password,
        confirmPassword
      });
      
      if (!validationResult.success) {
        errorMessage = validationResult.error.issues[0]?.message || 'Datos inv√°lidos';
      } else {
        // Intentar registrar usuario
        const result = await registerUser({
          name,
          email,
          password,
          confirmPassword
        }, Astro.cookies);
        
        if (result.success && result.user) {
          successMessage = 'Cuenta creada exitosamente. Redirigiendo...';
          // Redirigir al onboarding despu√©s de un peque√±o delay
          setTimeout(() => {
            return Astro.redirect('/onboarding/level');
          }, 2000);
        } else {
          errorMessage = result.error || 'Error al crear la cuenta';
        }
      }
    }
  } catch (error) {
    console.error('Registration error:', error);
    errorMessage = 'Error del servidor. Intenta nuevamente.';
  }
}
---

<AuthLayout>
  <div class="w-full max-w-md">
    <!-- Logo/T√≠tulo -->
    <div class="text-center mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">Crear Cuenta</h1>
      <p class="text-gray-600">Reg√≠strate para empezar</p>
    </div>

    <!-- Formulario -->
    <div class="bg-white rounded-2xl shadow-xl p-8">
      <form method="POST" class="space-y-6">
        <!-- Mensaje de error -->
        {errorMessage && (
          <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg">
            <p>{errorMessage}</p>
          </div>
        )}

        <!-- Mensaje de √©xito -->
        {successMessage && (
          <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg">
            <p>{successMessage}</p>
          </div>
        )}

        <!-- Campo Usuario -->
        <div class="space-y-2">
          <Label for="name" class="text-gray-700 font-medium">Nombre</Label>
          <Input
            type="text"
            id="name"
            name="name"
            value={formData.name}
            required
            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-gray-400"
            placeholder="Ingresa tu nombre completo"
          />
        </div>

        <!-- Campo Email -->
        <div class="space-y-2">
          <Label for="email" class="text-gray-700 font-medium">Email</Label>
          <Input
            type="email"
            id="email"
            name="email"
            value={formData.email}
            required
            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-gray-400"
            placeholder="tu@email.com"
          />
        </div>

        <!-- Campo Contrase√±a -->
        <div class="space-y-2">
          <Label for="password" class="text-gray-700 font-medium">Contrase√±a</Label>
          <Input
            type="password"
            id="password"
            name="password"
            value={formData.password}
            required
            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-gray-400"
            placeholder="Crea una contrase√±a segura (min. 8 caracteres)"
          />
        </div>

        <!-- Campo Confirmar Contrase√±a -->
        <div class="space-y-2">
          <Label for="confirm-password" class="text-gray-700 font-medium">Confirmar Contrase√±a</Label>
          <Input
            type="password"
            id="confirm-password"
            name="confirm-password"
            value={formData.confirmPassword}
            required
            class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-gray-400"
            placeholder="Confirma tu contrase√±a"
          />
        </div>

        <!-- T√©rminos y condiciones -->
        <div class="flex items-start space-x-2">
          <input
            type="checkbox"
            id="terms"
            name="terms"
            checked={formData.terms}
            required
            class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500 mt-1"
          />
          <label for="terms" class="text-sm text-gray-600">
            Acepto los
            <a
              href="#"
              class="text-blue-600 hover:text-blue-800 transition-colors"
            >t√©rminos y condiciones</a>
            y la
            <a
              href="#"
              class="text-blue-600 hover:text-blue-800 transition-colors"
            >pol√≠tica de privacidad</a>
          </label>
        </div>

        <!-- Bot√≥n de Registro -->
        <Button
          type="submit"
          class="w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-3 px-6 rounded-lg shadow-md hover:shadow-lg transform hover:scale-[1.02] transition-all duration-200"
        >
          Crear Cuenta
        </Button>
      </form>

      <!-- Divider -->
      <div class="my-6 flex items-center">
        <div class="flex-1 border-t border-gray-200"></div>
        <span class="px-4 text-gray-500 text-sm">o</span>
        <div class="flex-1 border-t border-gray-200"></div>
      </div>

      <!-- Login -->
      <div class="text-center">
        <p class="text-gray-600">
          ¬øYa tienes cuenta?
          <a
            href="/auth/login"
            class="text-blue-600 hover:text-blue-800 font-medium transition-colors"
          >
            Inicia sesi√≥n aqu√≠
          </a>
        </p>
      </div>
    </div>
    
    <!-- Informaci√≥n de validaci√≥n -->
    <div class="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
      <h3 class="text-sm font-semibold text-blue-900 mb-2">üìã Requisitos:</h3>
      <div class="text-xs text-blue-800 space-y-1">
        <p>‚Ä¢ Nombre: m√≠nimo 2 caracteres</p>
        <p>‚Ä¢ Email: formato v√°lido</p>
        <p>‚Ä¢ Contrase√±a: m√≠nimo 8 caracteres</p>
        <p>‚Ä¢ Confirmar contrase√±a: debe coincidir</p>
        <p>‚Ä¢ T√©rminos: debe aceptar</p>
      </div>
    </div>
  </div>
</AuthLayout>

{successMessage && (
  <script>
    // Redirigir despu√©s de mostrar el mensaje de √©xito
    setTimeout(() => {
      window.location.href = '/onboarding/level';
    }, 2000);
  </script>
)}
